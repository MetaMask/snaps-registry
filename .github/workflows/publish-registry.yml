name: Publish Registry

on:
  workflow_call:
    inputs:
      publish-environment:
        required: true
        type: string
    secrets:
      REGISTRY_PRIVATE_KEY:
        required: true

jobs:
  check-updated:
    name: Check if registry file was updated
    runs-on: ubuntu-latest
    outputs:
      UPDATED: ${{ steps.updated.outputs.UPDATED }}
    steps:
      - uses: actions/checkout@v3
      - name: Check if registry file was updated
        id: updated
        run: |
          git fetch --prune --unshallow
          if git diff --name-only HEAD^ HEAD | grep src/registry.json
          then
            echo "UPDATED=true" >> "$GITHUB_OUTPUT"
          else
            echo "UPDATED=false" >> "$GITHUB_OUTPUT"
          fi

  publish-registry:
    name: Deploy registry to remote storage
    environment: $({ inputs.publish-environment })
    needs: check-updated
    if: ${{ needs.check-updated.outputs.UPDATED == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Install Yarn dependencies
        run: yarn --immutable
      - name: Sign registry
        run: yarn sign
        env:
          PRIVATE_KEY: ${{ secrets.REGISTRY_PRIVATE_KEY }}
      - run: |
          mkdir -p dist
          cp src/registry.json dist/registry.json
          cp src/signature.json dist/signature.json
      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          role-session-name: ghactionssession
          aws-region: ${{ vars.AWS_REGION }}
      - name: Deploy registry
        run: |
          aws s3 cp ./dist s3://${{ vars.AWS_BUCKET_NAME }}/latest --recursive --acl private
          aws cloudfront create-invalidation --distribution-id ${{ vars.AWS_CF_DISTRIBUTION_ID }} --paths "/latest"
